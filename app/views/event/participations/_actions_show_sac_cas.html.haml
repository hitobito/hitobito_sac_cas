-#  Copyright (c) 2024, Schweizer Alpen-Club. This file is part of
-#  hitobito_sac_cas and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_sac_cas.

- if can?(:summon, entry.model)
  = action_button(t('.create_invoice_button'),
                  invoice_group_event_participation_path(@group, @event, entry), :plus,
                  data: {method: :post, confirm: t('.create_invoice_confirmation'), in_button_group: true})

- if @event.course? && can?(:create, @event) && entry.roles.map(&:class).any?(&:leader?)
  = action_button(t(".attach_key_data_sheet"), group_event_key_data_sheets_path(@group, @event, {participation_ids: entry.id}), :file_pdf, method: :post)

- if can?(:leader_settlement, entry.model)
  = action_button(t('.create_course_leader_invoice_button'),
                nil,
                :file_pdf,
                data: { bs_toggle: 'popover', bs_title: t('.create_course_leader_invoice_button'), bs_placement: 'bottom', bs_content: render('popover_create_course_leader_settlement', entry: Event::Courses::LeaderSettlementForm.new(actual_days: entry.actual_days)).to_str })
