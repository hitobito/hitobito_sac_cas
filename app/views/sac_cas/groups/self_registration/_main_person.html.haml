-#  Copyright (c) 2023, Schweizer Alpen-Club. This file is part of
-#  hitobito_sac_cas and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_sac_cas.

= f.fields_for(:main_person_attributes, entry.main_person) do |f|
  = field_set_tag do
    = render('shared/error_messages', errors: f.object.errors, object: f.object)
    = f.labeled_input_fields :first_name, :last_name, { required: required }

    = f.labeled_text_area(:address, rows: 2, data: { provide: 'entity',
                                                    updater: 'AddressTypeahead.update',
                                                    url: addresses_query_url }, required: required)

    = f.labeled(:zip_code, t('contactable.fields.zip_town'), required: required) do
      .zip-code-and-town-input-fields.address-input-fields.row
        .col-1
          = f.string_field(:zip_code, class: 'span-none zip-code-field', maxlength: 10, required: required)
        .col-3
          = f.string_field(:town, class: 'span-none town-field', required: required)

    = f.labeled(:country, required: required) do
        .shown.ms-0
        = f.country_select('country',
                        { priority_countries: Settings.countries.prioritized,
                          selected: f.object.country.presence || Settings.addresses.imported_countries.first,
                          include_blank: false },
                        { class: 'form-select form-select-sm tom-select',
                          data: { placeholder: ' ',
                                  chosen_no_results: t('global.chosen_no_results'),
                                  typeahead_supported_countries: Settings.addresses.imported_countries } })

    = f.labeled_input_field :email, help_inline: t('people.email_field.used_as_login'), required: required

    = field_set_tag do
      = f.labeled(:gender, required: required) do
        - (Person::GENDERS + ['']).each do |key|
          = f.inline_radio_button(:gender, key, f.object.gender_label(key))

    = f.labeled_date_field :birthday, required: required

    = field_set_tag do
      = f.labeled_inline_fields_for :phone_numbers do |ff|
        %div.col-5.inline
          = ff.input_field(:number, placeholder: PhoneNumber.human_attribute_name(:number))
        %div.col-2.inline.row
          = ff.collection_select(:translated_label, PhoneNumber.available_labels, :to_s, :to_s, {}, class: 'form-select form-select-sm h-100')
        = ff.hidden_field(:public)

    = f.labeled(:additional_information, t('.notes')) do
      = f.text_area(:additional_information)
.btn-toolbar.bottom
  = c.next_button

