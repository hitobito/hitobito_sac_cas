-#  Copyright (c) 2023, Schweizer Alpen-Club. This file is part of
-#  hitobito_sac_cas and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_sac_cas.

.well
  = simple_format(t('.membership_info_box'))

= f.nested_fields_for :housemates, nil, nil, model_object: SelfRegistration::Housemate.new, data: { action: c.stimulus_action(:toggleHousemateButtons), mode: :add} do |ff|
  - c.with_model(ff.object) do
    = field_set_tag do
      = ff.error_messages
      - [:first_name, :last_name].each do |attr|
        = ff.labeled_input_field attr, { required: c.required?(attr) } if c.attr?(attr)

      - if c.attr?(:email)
        = ff.labeled_input_field :email, help_inline: t('people.email_field.used_as_login'), required: c.required?(:email), class: 'd-inline'
      - if c.attr?(:gender)
        = field_set_tag do
          = ff.labeled(:gender, required: c.required?(:gender)) do
            - (Person::GENDERS + ['']).each do |key|
              = ff.inline_radio_button(:gender, key, ff.object.gender_label(key))

      - if c.attr?(:birthday)
        = ff.labeled_date_field :birthday, required: c.required?(:birthday)
      .control-group
        .controls
          = ff.link_to_remove(I18n.t('global.associations.remove'), { href: '#', data: { action: c.stimulus_action(:toggleHousemateButtons), mode: :remove }})

%br
- if entry.housemates.empty?
  .btn-toolbar.bottom
    = c.next_button(t('.next_as_single_link'))
    = c.back_link
  .btn-toolbar.bottom.hidden
    = c.next_button(t('.next_as_household_link'))
    = c.back_link
- else
  .btn-toolbar.bottom.hidden
    = c.next_button(t('.next_as_single_link'))
    = c.back_link
  .btn-toolbar.bottom
    = c.next_button(t('.next_as_household_link'))
    = c.back_link
