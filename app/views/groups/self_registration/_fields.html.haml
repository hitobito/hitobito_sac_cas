-#  Copyright (c) 2023, Schweizer Alpen-Club. This file is part of
-#  hitobito_sac_cas and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/hitobito/hitobito_sac_cas.

= fields.labeled_input_fields :first_name, :last_name, { required: true }

= fields.labeled_text_area(:address, rows: 2, data: { provide: 'entity',
                                                 updater: 'AddressTypeahead.update',
                                                 url: addresses_query_url }, required: true)

= fields.labeled(:zip_code, t('contactable.fields.zip_town'), required: true) do
  .zip-code-and-town-input-fields.address-input-fields.row
    .col-1
      = fields.string_field(:zip_code, class: 'span-none zip-code-field', maxlength: 10, required: true)
    .col-3
      = fields.string_field(:town, class: 'span-none town-field', required: true)

= fields.labeled(:country, required: true) do
  .shown.ms-0
    = country_select(fields.object.class.model_name.param_key,
                     'country',
                     { priority_countries: Settings.countries.prioritized,
                       selected: Settings.addresses.imported_countries.first },
                     { class: 'form-select form-select-sm tom-select',
                       data: { placeholder: ' ',
                               chosen_no_results: t('global.chosen_no_results'),
                               typeahead_supported_countries: Settings.addresses.imported_countries } })

= fields.labeled_input_field :email, help_inline: t('people.email_field.used_as_login'), required: true, class: 'd-inline'

= field_set_tag do
  = fields.labeled(:gender, required: true) do
    - (Person::GENDERS + ['']).each do |key|
      = fields.inline_radio_button(:gender, key, entry.person.gender_label(key))

= fields.labeled_input_fields :birthday, required: true

= field_set_tag do
  = fields.labeled_inline_fields_for :phone_numbers, 'phone_number_fields'

= fields.labeled(:additional_information, t('.notes')) do
  = fields.text_area(:additional_information)

= fields.labeled(t('.promo_code')) do
  = text_field_tag(:promo_code, nil, class: 'form-control form-control-sm mw-100 mw-md-60ch')
